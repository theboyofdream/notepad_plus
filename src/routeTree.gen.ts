/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SettingsLazyImport = createFileRoute('/settings')()
const KeyboardShortcutsLazyImport = createFileRoute('/keyboard-shortcuts')()
const editorIndexLazyImport = createFileRoute('/(editor)/')()

// Create/Update Routes

const SettingsLazyRoute = SettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))

const KeyboardShortcutsLazyRoute = KeyboardShortcutsLazyImport.update({
  path: '/keyboard-shortcuts',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/keyboard-shortcuts.lazy').then((d) => d.Route),
)

const editorIndexLazyRoute = editorIndexLazyImport
  .update({
    path: '/',
    getParentRoute: () => roo./ routes / (editor) / index.lazy
  } as any)
  .lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/keyboard-shortcuts': {
      id: '/keyboard-shortcuts'
      path: '/keyboard-shortcuts'
      fullPath: '/keyboard-shortcuts'
      preLoaderRoute: typeof KeyboardShortcutsLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/(editor)/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof editorIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/keyboard-shortcuts': typeof KeyboardShortcutsLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/': typeof editorIndexLazyRoute
}

export interface FileRoutesByTo {
  '/keyboard-shortcuts': typeof KeyboardShortcutsLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/': typeof editorIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/keyboard-shortcuts': typeof KeyboardShortcutsLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/': typeof editorIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/keyboard-shortcuts' | '/settings' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/keyboard-shortcuts' | '/settings' | '/'
  id: '__root__' | '/keyboard-shortcuts' | '/settings' | '/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  KeyboardShortcutsLazyRoute: typeof KeyboardShortcutsLazyRoute
  SettingsLazyRoute: typeof SettingsLazyRoute
  editorIndexLazyRoute: typeof editorIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  KeyboardShortcutsLazyRoute: KeyboardShortcutsLazyRoute,
  SettingsLazyRoute: SettingsLazyRoute,
  editorIndexLazyRoute: editorIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/keyboard-shortcuts",
        "/settings",
        "/"
      ]
    },
    "/keyboard-shortcuts": {
      "filePath": "keyboard-shortcuts.lazy.tsx"
    },
    "/settings": {
      "filePath": "settings.lazy.tsx"
    },
    "/": {
      "filePath": "(editor)/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
